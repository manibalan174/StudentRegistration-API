@model StudentRegistration.Core.Modals.StudentRegistrationModel
@{
    ViewBag.Title = "AddEditStudentDetails";
}
<script src="~/js/site.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}
<style>
    .star {
        color: #ff0000;
        font-size: 18px
    }

    #LastName-error, #StudentAge-error, #FavoriteSubject-error, #MathsMark-error,
    #ChemistryMark-error, #ComputerScienceMark-error {
        margin-left: 12rem;
        color: red
    }

    .input, input[type="radio"] {
        =[] border: 1px solid #ccc;
        border-radius: 5px;
    }

    .input {
        height: 34px
    }

    span {
        margin: 0rem 0.7rem 0rem 0.7rem;
    }

    .form-contanier {
        margin-top: 3rem
    }

    .btn-algins {
        margin-top: 1.8rem;
    }

    h3 {
        color: #d42c2c
    }
</style>

@using (Html.BeginForm("InsertUpdateStudentDetails", "StudentRegistration", FormMethod.Post, new { @id = "StudentDetilasForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.StudentId)
    <div class="container">
        @if (Model != null)
        {
            <h3>Edit Student Details</h3>
        }
        else
        {
            <h3>Create Student Details</h3>
        }
        <div class="form-contanier">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">First Name</label>
                        @Html.EditorFor(Modal => Modal.FisrtName, new { HtmlAttributes = new { @type = "text", @class = "col-lg-7 col-xs-8 input mb-3", @placeholder = "Enter Your Frist Name", @maxlength = "50" } })
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Last Name <span class="star">*</span></label>
                        @Html.EditorFor(Modal => Modal.LastName, new { HtmlAttributes = new { @type = "text", @class = "col-lg-7 col-xs-8 input  mb-3", @placeholder = "Enter Your Last Name", @maxlength = "50" } })
                        <div class="text-danger Lastname" hidden></div>
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Date Of Birth</label>
                        @Html.EditorFor(Modal => Modal.DateOfBirth, new { HtmlAttributes = new { @type = "date", @class = "col-lg-7 col-xs-8 input  mb-3", onchange = "getAge()" } })

                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Age <span class="star">*</span></label>
                        @Html.EditorFor(Modal => Modal.StudentAge, new { HtmlAttributes = new { @type = "number", @class = "col-lg-7 col-xs-8 input  mb-3", @placeholder = "Enter Your Age", @maxlength = "3" } })
                        <div class="text-danger Age" hidden></div>
                    </div>s
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Favorite Subject <span class="star">*</span></label>
                        @Html.DropDownListFor(Modal => Modal.FavoriteSubject, new List<SelectListItem> { new SelectListItem() { Text="---Select Department---", Value=""},
                                          new SelectListItem { Text="Tamil", Value="Tamil"},
                                          new SelectListItem { Text="English", Value="English"},
                                          new SelectListItem { Text="Maths", Value="Maths"},
                                          new SelectListItem { Text="Science", Value="Science"},
                                           new SelectListItem { Text="Social", Value="Social"},
                                  }, new { @class = "col-lg-7 col-xs-8 input  mb-3" })
                        <div class="text-danger FavoriteSubject" hidden></div>
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Inserted Course</label>
                        @Html.DropDownListFor(Modal => Modal.InterestedCourse, new List<SelectListItem> { new SelectListItem() { Text="---Select Department---", Value=""},
                                          new SelectListItem { Text="Maths Biology", Value="Tamil"},
                                          new SelectListItem { Text="Computer Science", Value="Computer Science"},
                                          new SelectListItem { Text="Art", Value="Art"},
                                          new SelectListItem { Text="Pure Science", Value="Pure Science"},
                                  }, new { @class = "col-lg-7 col-xs-8 input  mb-3" })
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Maths Mark <span class="star">*</span></label>
                        @Html.EditorFor(Modal => Modal.MathsMark, new { HtmlAttributes = new { @type = "number", @class = "col-lg-7 col-xs-8 input  mb-3", @placeholder = "Enter Your Maths Mark", @maxlength = "3" } })
                        <div class="text-danger MathsMark" hidden></div>
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Chemistry Mark <span class="star">*</span></label>
                        @Html.EditorFor(Modal => Modal.ChemistryMark, new { HtmlAttributes = new { @type = "number", @class = "col-lg-7 col-xs-8 input  mb-3", @placeholder = "Enter Your Chemistry Mark", @maxlength = "3" } })
                        <div class="text-danger ChemistryMark" hidden></div>
                    </div>
                    <div class="row">
                        <label class="col-lg-4 col-xs-4">Computer Science Mark<span class="star">*</span></label>
                        @Html.EditorFor(Modal => Modal.ComputerScienceMark, new { HtmlAttributes = new { @type = "number", @class = "col-lg-7 col-xs-8 input  mb-3", @placeholder = "Enter Your Computer Science Mark", @maxlength = "3" } })
                        <div class="text-danger ComputerScienceMark" hidden></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align:center">
                <div class="btn-algins">
                    @if (Model != null)
                    {
                        <button type="submit" class="btn btn-primary">Update</button>
                        <button type="reset" onclick="clear()" class="btn btn-default">Reset</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary">Submit</button>
                        <button type="reset" class="btn btn-default">Reset</button>
                    }
                    <button type="button" class="btn btn-default" onclick="btn()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

@if (TempData["Alert1"] != null)
{
    <script type="text/javascript">
        alert("@Html.Raw(@TempData["Alert1"].ToString())");
    </script>
}
<script>
    $(function() {
        debugger;
            $("#StudentDetilasForm").validate({
                rules: {
                    LastName:
                    {
                        required: true,
                        maxlength: 50
                    },
                    StudentAge:
                    {
                        required: true,
                        maxlength: 3
                    },
                    FavoriteSubject:
                    {
                        required: true,
                    },
                    MathsMark:
                    {
                        required: true,
                        maxlength: 3
                    },
                    ChemistryMark:
                    {
                        required: true,
                        maxlength: 3
                    },
                    ComputerScienceMark:
                    {
                        required: true,
                        maxlength: 3
                    }
                },
                messages:
                {
                    LastName:
                    {
                        required: "Last Name is required",
                        maxlength: "Last Name should be 50 charcter"
                    },
                    StudentAge:
                    {
                        required: "Age is required",
                        maxlength: "Age should be 3 digits"
                    },
                    FavoriteSubject:
                    {
                        required: "Please Select Favorite Subject",
                    },
                    MathsMark:
                    {
                        required: "Maths Mark is required",
                        maxlength: "Maths Mark should be 3 digits"
                    },
                    ChemistryMark:
                    {
                        required: "Chemistry Mark is required",
                        maxlength: "Chemistry Mark should be 3 digits"
                    },
                    ComputerScienceMark:
                    {
                        required: "Computer Science Mark is required",
                        maxlength: "Computer Science Mark should be 3 digits"
                    }
                }
            });

    });



    //function SubmitDetails1() {
    //    debugger;
    //    alert("Ho")
    //    if ($("#StudentDetilasForm").valid()) {
    //        $("#StudentDetilasForm").submit();
    //    }


        function btn() {
        window.location.href = "@Url.Action("StudentDetailsList", "StudentRegistration")";
        }



        function getAge() {

            var dateString = $("#DateOfBirth").val();
            //alert(dateString)
            var today = new Date();
            var birthDate = new Date(dateString);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            $('#StudentAge').val(age);
            //if ($('#StudentAge').val() != "") {
            //    $('#StudentAge').prop("disabled", true);
            //}
            //else {
            //    $('#StudentAge').prop("disabled", false);;
            //}
        }
</script>